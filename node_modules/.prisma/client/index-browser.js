
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('@prisma/client/runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.10.1
 * Query Engine version: 9b628578b3b7cae625e8c927178f15a170e74a9c
 */
Prisma.prismaVersion = {
  client: "6.10.1",
  engine: "9b628578b3b7cae625e8c927178f15a170e74a9c"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.Attendance_userScalarFieldEnum = {
  id: 'id',
  username: 'username',
  password: 'password',
  role: 'role',
  school_id: 'school_id'
};

exports.Prisma.SchoolScalarFieldEnum = {
  id: 'id',
  name: 'name',
  address: 'address',
  photo: 'photo'
};

exports.Prisma.ClassesScalarFieldEnum = {
  id: 'id',
  class: 'class',
  section: 'section',
  school_id: 'school_id'
};

exports.Prisma.HolidaysScalarFieldEnum = {
  id: 'id',
  date: 'date',
  reason: 'reason',
  school_id: 'school_id',
  class_ids: 'class_ids',
  fn: 'fn',
  an: 'an'
};

exports.Prisma.StaffScalarFieldEnum = {
  id: 'id',
  username: 'username',
  designation: 'designation',
  name: 'name',
  email: 'email',
  gender: 'gender',
  mobile: 'mobile',
  school_id: 'school_id',
  password: 'password'
};

exports.Prisma.StaffAttendanceScalarFieldEnum = {
  username: 'username',
  date: 'date',
  fn_status: 'fn_status',
  an_status: 'an_status',
  school_id: 'school_id'
};

exports.Prisma.StudentScalarFieldEnum = {
  id: 'id',
  username: 'username',
  name: 'name',
  gender: 'gender',
  email: 'email',
  mobile: 'mobile',
  class_id: 'class_id',
  school_id: 'school_id',
  photo: 'photo',
  password: 'password'
};

exports.Prisma.StudentAttendanceScalarFieldEnum = {
  username: 'username',
  date: 'date',
  fn_status: 'fn_status',
  an_status: 'an_status',
  school_id: 'school_id',
  class_id: 'class_id'
};

exports.Prisma.ClassTimetableScalarFieldEnum = {
  id: 'id',
  schoolId: 'schoolId',
  classesId: 'classesId',
  dayOfWeek: 'dayOfWeek',
  periodNumber: 'periodNumber',
  subject: 'subject'
};

exports.Prisma.FeedbackScalarFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  feedback: 'feedback',
  school_id: 'school_id',
  class_id: 'class_id',
  created_at: 'created_at'
};

exports.Prisma.AdminScalarFieldEnum = {
  id: 'id',
  name: 'name',
  designation: 'designation',
  gender: 'gender',
  mobile: 'mobile',
  email: 'email',
  photo: 'photo',
  username: 'username',
  school_id: 'school_id'
};

exports.Prisma.MessagesScalarFieldEnum = {
  id: 'id',
  messages: 'messages',
  date: 'date',
  school_id: 'school_id'
};

exports.Prisma.LeaveRequestScalarFieldEnum = {
  id: 'id',
  username: 'username',
  role: 'role',
  school_id: 'school_id',
  class_id: 'class_id',
  from_date: 'from_date',
  to_date: 'to_date',
  reason: 'reason',
  status: 'status',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.JsonNullValueInput = {
  JsonNull: Prisma.JsonNull
};

exports.Prisma.Attendance_userOrderByRelevanceFieldEnum = {
  username: 'username',
  password: 'password',
  role: 'role'
};

exports.Prisma.SchoolOrderByRelevanceFieldEnum = {
  name: 'name',
  address: 'address'
};

exports.Prisma.ClassesOrderByRelevanceFieldEnum = {
  class: 'class',
  section: 'section'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.HolidaysOrderByRelevanceFieldEnum = {
  reason: 'reason',
  fn: 'fn',
  an: 'an'
};

exports.Prisma.StaffOrderByRelevanceFieldEnum = {
  username: 'username',
  designation: 'designation',
  name: 'name',
  email: 'email',
  mobile: 'mobile',
  password: 'password'
};

exports.Prisma.StaffAttendanceOrderByRelevanceFieldEnum = {
  username: 'username',
  fn_status: 'fn_status',
  an_status: 'an_status'
};

exports.Prisma.StudentOrderByRelevanceFieldEnum = {
  username: 'username',
  name: 'name',
  email: 'email',
  mobile: 'mobile',
  password: 'password'
};

exports.Prisma.StudentAttendanceOrderByRelevanceFieldEnum = {
  username: 'username',
  fn_status: 'fn_status',
  an_status: 'an_status'
};

exports.Prisma.ClassTimetableOrderByRelevanceFieldEnum = {
  subject: 'subject'
};

exports.Prisma.FeedbackOrderByRelevanceFieldEnum = {
  name: 'name',
  email: 'email',
  feedback: 'feedback'
};

exports.Prisma.AdminOrderByRelevanceFieldEnum = {
  name: 'name',
  designation: 'designation',
  gender: 'gender',
  mobile: 'mobile',
  email: 'email',
  username: 'username'
};

exports.Prisma.MessagesOrderByRelevanceFieldEnum = {
  messages: 'messages',
  date: 'date'
};

exports.Prisma.LeaveRequestOrderByRelevanceFieldEnum = {
  username: 'username',
  reason: 'reason',
  status: 'status'
};
exports.Gender = exports.$Enums.Gender = {
  M: 'M',
  F: 'F',
  O: 'O'
};

exports.DayOfWeek = exports.$Enums.DayOfWeek = {
  Mon: 'Mon',
  Tue: 'Tue',
  Wed: 'Wed',
  Thu: 'Thu',
  Fri: 'Fri',
  Sat: 'Sat'
};

exports.Role = exports.$Enums.Role = {
  admin: 'admin',
  staff: 'staff',
  student: 'student'
};

exports.Prisma.ModelName = {
  Attendance_user: 'Attendance_user',
  School: 'School',
  Classes: 'Classes',
  Holidays: 'Holidays',
  Staff: 'Staff',
  StaffAttendance: 'StaffAttendance',
  Student: 'Student',
  StudentAttendance: 'StudentAttendance',
  ClassTimetable: 'ClassTimetable',
  Feedback: 'Feedback',
  Admin: 'Admin',
  Messages: 'Messages',
  LeaveRequest: 'LeaveRequest'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
